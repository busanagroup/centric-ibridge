
shutdown.addr=127.0.0.1
shutdown.port=9999

production.mode=False

kraken.rest.base.url=http://<krakenserver-and-port>/bagprod/rest/svc/
kraken.rest.username=<<username>>
kraken.rest.password=<<password>>

c8.rest.base.url=http://<c8server-and-port>/csi-requesthandler/api/v2/
c8.rest.username=<<username>>
c8.rest.password=<<password>>

redis.enabled=false
#
# redis.url is a url of:
# redis://[[username]:[password]]@localhost:6379/0
# rediss://[[username]:[password]]@localhost:6379/0
# unix://[[username]:[password]]@/path/to/socket.sock?db=0
#
# Three URL schemes are supported:
#
# redis://   creates a TCP socket connection. See more at https://www.iana.org/assignments/uri-schemes/prov/redis
# rediss://  creates a SSL wrapped TCP socket connection. See more at https://www.iana.org/assignments/uri-schemes/prov/rediss
# unix://    creates a Unix Domain Socket connection.
redis.url=<<redis_url>>

log.level=DEBUG
log.format=%(asctime)s - %(message)s
# log.file=

bridge.enabled=True

restapi.enabled=False
restapi.root.path=/
restapi.secret.key=<<secretkey>>
restapi.admin.username=<<admin_username>>

api_user=restsvc.users.preparer.UserRouterPreparer
restapi.available.services="
${api_user},
restsvc.example.preparer.ExampleRouterPreparer
"

# -------------------------------------------------
# MQ Transport definition
# -------------------------------------------------
# allow more than one transport defined, options:
#
#   mqtype: [stomp, mqtt, amqp, redis]
#
# Note:
#   for **redis** transport, only channel information were required, address, port, etc defined in redis.url
#
# mq.transport.count=1
# mq.transport.0.type=stomp
# mq.transport.0.address=xx.xx.xx.xx
# mq.transport.0.port=61613
# mq.transport.0.user=hello
# mq.transport.0.passwd=world
# mq.transport.0.channel=mychannel
# mq.transport.0.clientid=myclientid
